{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{getHeaderTitle,HeaderBackContext,HeaderHeightContext,HeaderShownContext}from'@react-navigation/elements';import{useTheme}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import useKeyboardManager from\"../../utils/useKeyboardManager\";import Card from\"./Card\";var EPSILON=0.1;function CardContainer(_ref){var interpolationIndex=_ref.interpolationIndex,index=_ref.index,active=_ref.active,closing=_ref.closing,gesture=_ref.gesture,focused=_ref.focused,modal=_ref.modal,getPreviousScene=_ref.getPreviousScene,getFocusedRoute=_ref.getFocusedRoute,headerDarkContent=_ref.headerDarkContent,hasAbsoluteFloatHeader=_ref.hasAbsoluteFloatHeader,headerHeight=_ref.headerHeight,onHeaderHeightChange=_ref.onHeaderHeightChange,isParentHeaderShown=_ref.isParentHeaderShown,isNextScreenTransparent=_ref.isNextScreenTransparent,detachCurrentScreen=_ref.detachCurrentScreen,layout=_ref.layout,onCloseRoute=_ref.onCloseRoute,onOpenRoute=_ref.onOpenRoute,onGestureCancel=_ref.onGestureCancel,onGestureEnd=_ref.onGestureEnd,onGestureStart=_ref.onGestureStart,onTransitionEnd=_ref.onTransitionEnd,onTransitionStart=_ref.onTransitionStart,renderHeader=_ref.renderHeader,renderScene=_ref.renderScene,safeAreaInsetBottom=_ref.safeAreaInsetBottom,safeAreaInsetLeft=_ref.safeAreaInsetLeft,safeAreaInsetRight=_ref.safeAreaInsetRight,safeAreaInsetTop=_ref.safeAreaInsetTop,scene=_ref.scene;var parentHeaderHeight=React.useContext(HeaderHeightContext);var _useKeyboardManager=useKeyboardManager(React.useCallback(function(){var _scene$descriptor=scene.descriptor,options=_scene$descriptor.options,navigation=_scene$descriptor.navigation;return navigation.isFocused()&&options.keyboardHandlingEnabled!==false;},[scene.descriptor])),onPageChangeStart=_useKeyboardManager.onPageChangeStart,onPageChangeCancel=_useKeyboardManager.onPageChangeCancel,onPageChangeConfirm=_useKeyboardManager.onPageChangeConfirm;var handleOpen=function handleOpen(){var route=scene.descriptor.route;onTransitionEnd({route:route},false);onOpenRoute({route:route});};var handleClose=function handleClose(){var route=scene.descriptor.route;onTransitionEnd({route:route},true);onCloseRoute({route:route});};var handleGestureBegin=function handleGestureBegin(){var route=scene.descriptor.route;onPageChangeStart();onGestureStart({route:route});};var handleGestureCanceled=function handleGestureCanceled(){var route=scene.descriptor.route;onPageChangeCancel();onGestureCancel({route:route});};var handleGestureEnd=function handleGestureEnd(){var route=scene.descriptor.route;onGestureEnd({route:route});};var handleTransition=function handleTransition(_ref2){var closing=_ref2.closing,gesture=_ref2.gesture;var route=scene.descriptor.route;if(!gesture){onPageChangeConfirm===null||onPageChangeConfirm===void 0?void 0:onPageChangeConfirm(true);}else if(active&&closing){onPageChangeConfirm===null||onPageChangeConfirm===void 0?void 0:onPageChangeConfirm(false);}else{onPageChangeCancel===null||onPageChangeCancel===void 0?void 0:onPageChangeCancel();}onTransitionStart===null||onTransitionStart===void 0?void 0:onTransitionStart({route:route},closing);};var insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};var _useTheme=useTheme(),colors=_useTheme.colors;var _React$useState=React.useState('box-none'),_React$useState2=_slicedToArray(_React$useState,2),pointerEvents=_React$useState2[0],setPointerEvents=_React$useState2[1];React.useEffect(function(){var _scene$progress$next,_scene$progress$next$;var listener=(_scene$progress$next=scene.progress.next)===null||_scene$progress$next===void 0?void 0:(_scene$progress$next$=_scene$progress$next.addListener)===null||_scene$progress$next$===void 0?void 0:_scene$progress$next$.call(_scene$progress$next,function(_ref3){var value=_ref3.value;setPointerEvents(value<=EPSILON?'box-none':'none');});return function(){if(listener){var _scene$progress$next2,_scene$progress$next3;(_scene$progress$next2=scene.progress.next)===null||_scene$progress$next2===void 0?void 0:(_scene$progress$next3=_scene$progress$next2.removeListener)===null||_scene$progress$next3===void 0?void 0:_scene$progress$next3.call(_scene$progress$next2,listener);}};},[pointerEvents,scene.progress.next]);var _scene$descriptor$opt=scene.descriptor.options,presentation=_scene$descriptor$opt.presentation,animationEnabled=_scene$descriptor$opt.animationEnabled,cardOverlay=_scene$descriptor$opt.cardOverlay,cardOverlayEnabled=_scene$descriptor$opt.cardOverlayEnabled,cardShadowEnabled=_scene$descriptor$opt.cardShadowEnabled,cardStyle=_scene$descriptor$opt.cardStyle,cardStyleInterpolator=_scene$descriptor$opt.cardStyleInterpolator,gestureDirection=_scene$descriptor$opt.gestureDirection,gestureEnabled=_scene$descriptor$opt.gestureEnabled,gestureResponseDistance=_scene$descriptor$opt.gestureResponseDistance,gestureVelocityImpact=_scene$descriptor$opt.gestureVelocityImpact,headerMode=_scene$descriptor$opt.headerMode,headerShown=_scene$descriptor$opt.headerShown,transitionSpec=_scene$descriptor$opt.transitionSpec;var previousScene=getPreviousScene({route:scene.descriptor.route});var backTitle;if(previousScene){var _previousScene$descri=previousScene.descriptor,options=_previousScene$descri.options,route=_previousScene$descri.route;backTitle=getHeaderTitle(options,route.name);}var headerBack=React.useMemo(function(){return backTitle!==undefined?{title:backTitle}:undefined;},[backTitle]);return React.createElement(Card,{interpolationIndex:interpolationIndex,gestureDirection:gestureDirection,layout:layout,insets:insets,gesture:gesture,current:scene.progress.current,next:scene.progress.next,closing:closing,onOpen:handleOpen,onClose:handleClose,overlay:cardOverlay,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransition:handleTransition,onGestureBegin:handleGestureBegin,onGestureCanceled:handleGestureCanceled,onGestureEnd:handleGestureEnd,gestureEnabled:index===0?false:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:active?'box-none':pointerEvents,pageOverflowEnabled:headerMode!=='float'&&presentation!=='modal',headerDarkContent:headerDarkContent,containerStyle:hasAbsoluteFloatHeader&&headerMode!=='screen'?{marginTop:headerHeight}:null,contentStyle:[{backgroundColor:presentation==='transparentModal'?'transparent':colors.background},cardStyle],style:[{overflow:active?undefined:'hidden',display:animationEnabled===false&&isNextScreenTransparent===false&&detachCurrentScreen!==false&&!focused?'none':'flex'},StyleSheet.absoluteFill]},React.createElement(View,{style:styles.container},React.createElement(ModalPresentationContext.Provider,{value:modal},React.createElement(View,{style:styles.scene},React.createElement(HeaderBackContext.Provider,{value:headerBack},React.createElement(HeaderShownContext.Provider,{value:isParentHeaderShown||headerShown!==false},React.createElement(HeaderHeightContext.Provider,{value:headerShown?headerHeight:parentHeaderHeight!==null&&parentHeaderHeight!==void 0?parentHeaderHeight:0},renderScene({route:scene.descriptor.route}))))),headerMode!=='float'?renderHeader({mode:'screen',layout:layout,scenes:[previousScene,scene],getPreviousScene:getPreviousScene,getFocusedRoute:getFocusedRoute,onContentHeightChange:onHeaderHeightChange}):null)));}export default React.memo(CardContainer);var styles=StyleSheet.create({container:{flex:1,flexDirection:'column-reverse'},scene:{flex:1}});","map":{"version":3,"sources":["CardContainer.tsx"],"names":["EPSILON","scene","parentHeaderHeight","React","onPageChangeConfirm","useKeyboardManager","navigation","options","handleOpen","route","onTransitionEnd","onOpenRoute","handleClose","onCloseRoute","handleGestureBegin","onPageChangeStart","onGestureStart","handleGestureCanceled","onPageChangeCancel","onGestureCancel","handleGestureEnd","onGestureEnd","handleTransition","gesture","active","onTransitionStart","insets","top","right","bottom","left","safeAreaInsetLeft","colors","useTheme","listener","value","setPointerEvents","transitionSpec","previousScene","getPreviousScene","backTitle","getHeaderTitle","headerBack","title","index","focused","headerMode","presentation","marginTop","headerHeight","backgroundColor","background","overflow","display","animationEnabled","isNextScreenTransparent","detachCurrentScreen","StyleSheet","styles","container","modal","isParentHeaderShown","headerShown","renderScene","renderHeader","mode","layout","scenes","getFocusedRoute","onContentHeightChange","onHeaderHeightChange","flex","flexDirection"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n} from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport type { Layout, Scene } from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport useKeyboardManager from '../../utils/useKeyboardManager';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\n\ntype Props = {\n  interpolationIndex: number;\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  modal: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene;\n  headerDarkContent: boolean | undefined;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n  isNextScreenTransparent: boolean;\n  detachCurrentScreen: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  interpolationIndex,\n  index,\n  active,\n  closing,\n  gesture,\n  focused,\n  modal,\n  getPreviousScene,\n  getFocusedRoute,\n  headerDarkContent,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  isNextScreenTransparent,\n  detachCurrentScreen,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const { onPageChangeStart, onPageChangeCancel, onPageChangeConfirm } =\n    useKeyboardManager(\n      React.useCallback(() => {\n        const { options, navigation } = scene.descriptor;\n\n        return (\n          navigation.isFocused() && options.keyboardHandlingEnabled !== false\n        );\n      }, [scene.descriptor])\n    );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart();\n    onGestureStart({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel();\n    onGestureCancel({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] =\n    React.useState<'box-none' | 'none'>('box-none');\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    animationEnabled,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n  }\n\n  const headerBack = React.useMemo(\n    () => (backTitle !== undefined ? { title: backTitle } : undefined),\n    [backTitle]\n  );\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      headerDarkContent={headerDarkContent}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[\n        {\n          backgroundColor:\n            presentation === 'transparentModal'\n              ? 'transparent'\n              : colors.background,\n        },\n        cardStyle,\n      ]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animationEnabled === false &&\n            isNextScreenTransparent === false &&\n            detachCurrentScreen !== false &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <ModalPresentationContext.Provider value={modal}>\n          <View style={styles.scene}>\n            <HeaderBackContext.Provider value={headerBack}>\n              <HeaderShownContext.Provider\n                value={isParentHeaderShown || headerShown !== false}\n              >\n                <HeaderHeightContext.Provider\n                  value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n                >\n                  {renderScene({ route: scene.descriptor.route })}\n                </HeaderHeightContext.Provider>\n              </HeaderShownContext.Provider>\n            </HeaderBackContext.Provider>\n          </View>\n          {headerMode !== 'float'\n            ? renderHeader({\n                mode: 'screen',\n                layout,\n                scenes: [previousScene, scene],\n                getPreviousScene,\n                getFocusedRoute,\n                onContentHeightChange: onHeaderHeightChange,\n              })\n            : null}\n        </ModalPresentationContext.Provider>\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}