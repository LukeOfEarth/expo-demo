{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"enabled\"],_excluded2=[\"enabled\",\"active\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";var Screens;try{Screens=require('react-native-screens');}catch(e){}export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,_excluded);if(Screens!=null){return React.createElement(Screens.ScreenContainer,_extends({enabled:enabled},rest));}return React.createElement(View,rest);};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,_excluded2);if(Screens!=null){return React.createElement(Screens.Screen,_extends({enabled:enabled,activityState:active},rest));}return React.createElement(View,rest);};","map":{"version":3,"sources":["Screens.tsx"],"names":["Screens","require","MaybeScreenContainer","rest","enabled","MaybeScreen","active"],"mappings":"saAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,qDAGA,GAAA,CAAA,OAAA,CAEA,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAjBD,sBAAiB,CAAjBA,CADF,CAEE,MAAA,CAAA,CAAU,CAEX,CAED,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAM9B,IAN+B,CAAA,OAM/B,MAN+B,OAM/B,CAJDC,IAIC,0CACJ,GAAIH,OAAO,EAAX,IAAA,CAAqB,CACnB,MAAO,CAAA,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,eAAA,CAAA,QAAA,CAAA,CAAyB,OAAO,CAAEI,OAAlC,CAAA,CAAP,IAAO,CAAA,CAAP,CACD,CAED,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAP,IAAO,CAAP,CAXK,CAAA,CAcP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAQrB,IARsB,CAAA,OAQtB,OARsB,OAQtB,CARsB,MAQtB,OARsB,MAQtB,CALDF,IAKC,4CACJ,GAAIH,OAAO,EAAX,IAAA,CAAqB,CACnB,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,OAAD,CAAA,MAAA,CAAA,QAAA,CAAA,CAAgB,OAAO,CAAvB,OAAA,CAAkC,aAAa,CAAEM,MAAjD,CAAA,CADF,IACE,CAAA,CADF,CAGD,CAED,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAP,IAAO,CAAP,CAfK,CAAA","sourcesContent":["import * as React from 'react';\nimport { Animated, View, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n"]},"metadata":{},"sourceType":"module"}