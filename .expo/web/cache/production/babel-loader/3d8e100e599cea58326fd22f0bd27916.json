{"ast":null,"code":"import{getHeaderTitle,HeaderBackContext}from'@react-navigation/elements';import{NavigationContext,NavigationRouteContext}from'@react-navigation/native';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forNoAnimation,forSlideLeft,forSlideRight,forSlideUp}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import Header from\"./Header\";export default function HeaderContainer(_ref){var mode=_ref.mode,scenes=_ref.scenes,layout=_ref.layout,getPreviousScene=_ref.getPreviousScene,getFocusedRoute=_ref.getFocusedRoute,onContentHeightChange=_ref.onContentHeightChange,style=_ref.style;var focusedRoute=getFocusedRoute();var parentHeaderBack=React.useContext(HeaderBackContext);return React.createElement(Animated.View,{pointerEvents:\"box-none\",style:style},scenes.slice(-3).map(function(scene,i,self){var _self,_self2;if(mode==='screen'&&i!==self.length-1||!scene){return null;}var _scene$descriptor$opt=scene.descriptor.options,header=_scene$descriptor$opt.header,headerMode=_scene$descriptor$opt.headerMode,_scene$descriptor$opt2=_scene$descriptor$opt.headerShown,headerShown=_scene$descriptor$opt2===void 0?true:_scene$descriptor$opt2,headerTransparent=_scene$descriptor$opt.headerTransparent,headerStyleInterpolator=_scene$descriptor$opt.headerStyleInterpolator;if(headerMode!==mode||!headerShown){return null;}var isFocused=focusedRoute.key===scene.descriptor.route.key;var previousScene=getPreviousScene({route:scene.descriptor.route});var headerBack=parentHeaderBack;if(previousScene){var _previousScene$descri=previousScene.descriptor,options=_previousScene$descri.options,route=_previousScene$descri.route;headerBack=previousScene?{title:getHeaderTitle(options,route.name)}:parentHeaderBack;}var previousDescriptor=(_self=self[i-1])===null||_self===void 0?void 0:_self.descriptor;var nextDescriptor=(_self2=self[i+1])===null||_self2===void 0?void 0:_self2.descriptor;var _ref2=(previousDescriptor===null||previousDescriptor===void 0?void 0:previousDescriptor.options)||{},_ref2$headerShown=_ref2.headerShown,previousHeaderShown=_ref2$headerShown===void 0?true:_ref2$headerShown,previousHeaderMode=_ref2.headerMode;var nextHeaderlessScene=self.slice(i+1).find(function(scene){var _ref3=(scene===null||scene===void 0?void 0:scene.descriptor.options)||{},_ref3$headerShown=_ref3.headerShown,currentHeaderShown=_ref3$headerShown===void 0?true:_ref3$headerShown,currentHeaderMode=_ref3.headerMode;return currentHeaderShown===false||currentHeaderMode==='screen';});var _ref4=(nextHeaderlessScene===null||nextHeaderlessScene===void 0?void 0:nextHeaderlessScene.descriptor.options)||{},nextHeaderlessGestureDirection=_ref4.gestureDirection;var isHeaderStatic=(previousHeaderShown===false||previousHeaderMode==='screen')&&!nextDescriptor||nextHeaderlessScene;var props={layout:layout,back:headerBack,progress:scene.progress,options:scene.descriptor.options,route:scene.descriptor.route,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?nextHeaderlessGestureDirection==='vertical'||nextHeaderlessGestureDirection==='vertical-inverted'?forSlideUp:nextHeaderlessGestureDirection==='horizontal-inverted'?forSlideRight:forSlideLeft:headerStyleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.descriptor.route.key,value:scene.descriptor.navigation},React.createElement(NavigationRouteContext.Provider,{value:scene.descriptor.route},React.createElement(View,{onLayout:onContentHeightChange?function(e){var height=e.nativeEvent.layout.height;onContentHeightChange({route:scene.descriptor.route,height:height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'&&!isFocused||headerTransparent?styles.header:null},header!==undefined?header(props):React.createElement(Header,props))));}));}var styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["HeaderContainer.tsx"],"names":["style","focusedRoute","getFocusedRoute","parentHeaderBack","React","mode","i","self","headerShown","headerStyleInterpolator","scene","headerMode","isFocused","previousScene","getPreviousScene","route","headerBack","title","getHeaderTitle","previousDescriptor","nextDescriptor","previousHeaderShown","previousHeaderMode","nextHeaderlessScene","currentHeaderShown","currentHeaderMode","gestureDirection","nextHeaderlessGestureDirection","isHeaderStatic","props","layout","back","progress","options","navigation","styleInterpolator","forNoAnimation","onContentHeightChange","e","height","styles","header","position","top","left","right"],"mappings":"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","sourcesContent":["import { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport {\n  forNoAnimation,\n  forSlideLeft,\n  forSlideRight,\n  forSlideUp,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderMode,\n  StackHeaderProps,\n  StackNavigationProp,\n} from '../../types';\nimport Header from './Header';\n\nexport type Props = {\n  mode: StackHeaderMode;\n  layout: Layout;\n  scenes: (Scene | undefined)[];\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerMode,\n          headerShown = true,\n          headerTransparent,\n          headerStyleInterpolator,\n        } = scene.descriptor.options;\n\n        if (headerMode !== mode || !headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.descriptor.route.key;\n        const previousScene = getPreviousScene({\n          route: scene.descriptor.route,\n        });\n\n        let headerBack = parentHeaderBack;\n\n        if (previousScene) {\n          const { options, route } = previousScene.descriptor;\n\n          headerBack = previousScene\n            ? { title: getHeaderTitle(options, route.name) }\n            : parentHeaderBack;\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousDescriptor = self[i - 1]?.descriptor;\n        const nextDescriptor = self[i + 1]?.descriptor;\n\n        const {\n          headerShown: previousHeaderShown = true,\n          headerMode: previousHeaderMode,\n        } = previousDescriptor?.options || {};\n\n        // If any of the next screens don't have a header or header is part of the screen\n        // Then we need to move this header offscreen so that it doesn't cover it\n        const nextHeaderlessScene = self.slice(i + 1).find((scene) => {\n          const {\n            headerShown: currentHeaderShown = true,\n            headerMode: currentHeaderMode,\n          } = scene?.descriptor.options || {};\n\n          return currentHeaderShown === false || currentHeaderMode === 'screen';\n        });\n\n        const { gestureDirection: nextHeaderlessGestureDirection } =\n          nextHeaderlessScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          ((previousHeaderShown === false || previousHeaderMode === 'screen') &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextDescriptor) ||\n          nextHeaderlessScene;\n\n        const props: StackHeaderProps = {\n          layout,\n          back: headerBack,\n          progress: scene.progress,\n          options: scene.descriptor.options,\n          route: scene.descriptor.route,\n          navigation: scene.descriptor\n            .navigation as StackNavigationProp<ParamListBase>,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? nextHeaderlessGestureDirection === 'vertical' ||\n                  nextHeaderlessGestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : nextHeaderlessGestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : headerStyleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.descriptor.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.descriptor.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.descriptor.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}