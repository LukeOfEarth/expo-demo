{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{CommonActions}from'@react-navigation/routers';export var NOT_INITIALIZED_ERROR=\"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";export default function createNavigationContainerRef(){var methods=[].concat(_toConsumableArray(Object.keys(CommonActions)),['addListener','removeListener','resetRoot','dispatch','canGoBack','getRootState','getState','getParent','getCurrentRoute','getCurrentOptions']);var ref=_objectSpread(_objectSpread({},methods.reduce(function(acc,name){acc[name]=function(){if(ref.current==null){console.error(NOT_INITIALIZED_ERROR);}else{var _ref$current;return(_ref$current=ref.current)[name].apply(_ref$current,arguments);}};return acc;},{})),{},{isReady:function isReady(){if(ref.current==null){return false;}return ref.current.isReady();},current:null});return ref;}","map":{"version":3,"sources":["createNavigationContainerRef.tsx"],"names":["NOT_INITIALIZED_ERROR","methods","Object","ref","acc","console","isReady","current"],"mappings":"06BAAA,OAAA,aAAA,KAAA,2BAAA,CAIA,MAAO,IAAMA,CAAAA,qBAAqB,CAA3B,+QAAA,CAGP,cAAe,SAAA,CAAA,4BAAA,EAEmC,CAChD,GAAMC,CAAAA,OAAO,8BACRC,MAAM,CAANA,IAAAA,CADW,aACXA,CADQ,GAAG,aAAH,CAAG,gBAAH,CAAG,WAAH,CAAG,UAAH,CAAG,WAAH,CAAG,cAAH,CAAG,UAAH,CAAG,WAAH,CAAG,iBAAH,CAAb,mBAAa,EAAb,CAcA,GAAMC,CAAAA,GAAiD,gCAClD,OAAO,CAAP,MAAA,CAAoB,SAAA,GAAA,CAAA,IAAA,CAAe,CACpCC,GAAG,CAAHA,IAAG,CAAHA,CAAY,UAAoB,CAC9B,GAAID,GAAG,CAAHA,OAAAA,EAAJ,IAAA,CAAyB,CACvBE,OAAO,CAAPA,KAAAA,CAAAA,qBAAAA,EADF,CAAA,IAEO,kBAEL,MAAOF,cAAAA,GAAG,CAAHA,OAAAA,EAAP,IAAOA,+BAAP,CACD,CANHC,CAAAA,CAQA,MAAA,CAAA,GAAA,CATC,CAAA,CADqD,EACrD,CADkD,MAYrDE,OAAO,CAAE,kBAAM,CACb,GAAIH,GAAG,CAAHA,OAAAA,EAAJ,IAAA,CAAyB,CACvB,MAAA,MAAA,CACD,CAED,MAAOA,CAAAA,GAAG,CAAHA,OAAAA,CAAP,OAAOA,EAAP,CAjBsD,CAAH,CAmBrDI,OAAO,CAAE,IAnB4C,EAAvD,CAsBA,MAAA,CAAA,GAAA,CACD","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type { NavigationContainerRefWithCurrent } from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (ref.current == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          // @ts-expect-error: this is ok\n          return ref.current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n    isReady: () => {\n      if (ref.current == null) {\n        return false;\n      }\n\n      return ref.current.isReady();\n    },\n    current: null,\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}